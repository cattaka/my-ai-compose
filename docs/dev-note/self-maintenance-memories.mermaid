%% Updated self-maintenance-memories flow (synced with self-maintenance-memories.md)

flowchart TD

%% STATE GROUPING (logical only)
STATE[[State Vars]]
SUBA[Core<br/>user_input<br/>memory_simplicity]
SUBB[Lexical<br/>wellknown_words<br/>word_meanings<br/>requested_words]
SUBC[Update<br/>updated_words<br/>updated_memories<br/>require_more_memory]
SUBD[Answer<br/>answer]
STATE --- SUBA
STATE --- SUBB
STATE --- SUBC
STATE --- SUBD

%% PROCESS NODES
INIT([fetch_wellknown_words_node])
ASKW([ask_word_meanings_node])
FMW([fetch_word_meanings_node])
ASKM([ask_more_word_meanings_node])
BR{require_more_memory &&<br/>memory_simplicity < 1000?}
UPD([ask_updated_memories_node])
SAVE([save_updated_memories_node])
FIN([finalize_node])
END((END))

%% OUTPUT (DATA SNAPSHOTS) NODES
OUT_INIT[[memory_simplicity<br/>wellknown_words<br/>word_meanings=[]]]
OUT_AW[[requested_words]]
OUT_FMW[[word_meanings (threshold <= memory_simplicity)]]
OUT_ASKM[[answer<br/>requested_words (refresh)<br/>require_more_memory]]
OUT_UPD[[updated_words<br/>updated_memories]]
OUT_FIN[[answer (final)]]

%% FLOWS
INIT --> OUT_INIT --> ASKW
ASKW --> OUT_AW --> FMW
FMW --> OUT_FMW --> ASKM
ASKM --> OUT_ASKM --> BR

%% LOOP: escalate memory_simplicity by +500 then re-fetch meanings
BR -->|Yes (escalate: memory_simplicity += 500)| FMW

%% PROCEED
BR -->|No| UPD
UPD --> OUT_UPD --> SAVE
SAVE --> FIN
FIN --> OUT_FIN --> END

%% STYLES
classDef proc fill=#0366d6,stroke=#0d3d66,stroke-width=1,color=#fff
classDef data fill=#eaf5ff,stroke=#7fb3e6,stroke-width=1,color=#111
classDef branch fill=#ffdfa3,stroke=#c27d00,stroke-width=1,color=#111
class INIT,ASKW,FMW,ASKM,UPD,SAVE,FIN proc
class OUT_INIT,OUT_AW,OUT_FMW,OUT_ASKM,OUT_UPD,OUT_FIN data
class BR branch

%% NOTES
%% - fetch_wellknown_words_node initializes memory_simplicity (0) and loads base wellknown_words
%% - fetch_word_meanings_node respects current memory_simplicity threshold
%% - ask_more_word_meanings_node can set require_more_memory True
%% - Loop escalates memory_simplicity in +500 steps (0 -> 500 -> 1000)
%% - ask_updated_memories_node derives updated_words / updated_memories
%% - save_updated_memories_node persists (insert/update/delete via deleted_at) then finalize_node returns final